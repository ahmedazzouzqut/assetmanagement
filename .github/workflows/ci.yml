name: Backend CI

on:
  push:
    branches: [ main ]

jobs:
  test:
    name: Run Tests
    runs-on: self-hosted

    # Put caches in RAM (tmpfs) and make cleanup easy everywhere
    env:
      NPM_CONFIG_CACHE: /dev/shm/.npm
      YARN_CACHE_FOLDER: /dev/shm/.yarn
      CI: true

    strategy:
      matrix:
        node-version: [22]

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Setup Node.js (Node ${{ matrix.node-version }}) + Corepack
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
      - run: corepack enable

      # Keep the runner lean before we start
      - name: Pre-clean workspace
        run: |
          df -h
          git clean -fdx            # wipe untracked files (old build, node_modules, etc)
          rm -rf ~/.npm ~/.cache/yarn

      - name: Print Env Secret
        env:
          MONGO_URI: ${{ secrets.MONGO_URI }}
          JWT_SECRET: ${{ secrets.JWT_SECRET }}
          PORT: ${{ secrets.PORT }}
        run: |
          echo "Secret 1 is: $MONGO_URI"
          echo "Secret 2 is: $JWT_SECRET"
          echo "Secret 3 is: $PORT"

      - name: Stop PM2 apps (if running)
        run: pm2 stop all || true

      # ---- Backend ----
      - name: Install Backend Dependencies (Yarn, lockfile strict)
        working-directory: ./backend
        run: |
          yarn --version || true
          yarn install --frozen-lockfile --prefer-offline

      - name: Run Backend Tests
        working-directory: ./backend
        env:
          MONGO_URI: ${{ secrets.MONGO_URI }}
          JWT_SECRET: ${{ secrets.JWT_SECRET }}
          PORT: ${{ secrets.PORT }}
        run: yarn test || npm test

      - name: Write backend .env
        working-directory: ./backend
        run: |
          rm -f .env
          printf '%s\n' "${{ secrets.PROD }}" > .env

      # ---- Frontend ----
      - name: Install Frontend Dependencies (Yarn, lockfile strict)
        working-directory: ./frontend
        run: |
          yarn install --frozen-lockfile --prefer-offline

      - name: Build Frontend
        working-directory: ./frontend
        env:
          # Optional: reduce memory spikes during build
          NODE_OPTIONS: --max_old_space_size=512
        run: |
          yarn run build
          df -h

      # ---- Deploy / Restart ----
      - name: Start PM2 apps
        run: pm2 start all || true

      - name: Restart PM2 apps
        run: pm2 restart all || true

      # ---- Post-clean to keep disk free for next runs ----
      - name: Post-clean artifacts & caches
        if: always()
        run: |
          rm -rf frontend/node_modules backend/node_modules frontend/build .cache .turbo .next
          rm -rf ~/.npm ~/.cache/yarn
          df -h
